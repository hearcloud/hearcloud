# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-08-17 16:46
from __future__ import unicode_literals

import applications.box.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(default='', upload_to=applications.box.models.upload_to_username, verbose_name='File')),
                ('file_size', models.CharField(blank=True, max_length=10, null=True, verbose_name='File size in bytes')),
                ('file_type', models.CharField(blank=True, max_length=5, null=True, verbose_name='File type')),
                ('duration', models.DurationField(null=True, verbose_name='Song duration')),
                ('title', models.CharField(blank=True, max_length=250, null=True, verbose_name='Title')),
                ('artist', models.CharField(blank=True, max_length=250, null=True, verbose_name='Artist')),
                ('album', models.CharField(blank=True, max_length=500, null=True, verbose_name='Album name')),
                ('year', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(3000)], verbose_name='Year')),
                ('release_date', models.DateField(null=True, verbose_name='Complete release date (day-month-year)')),
                ('album_artist', models.CharField(blank=True, max_length=250, null=True, verbose_name='Album artist (band/orchestra/accompaniment)')),
                ('track_number', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(3000)], verbose_name='Track number')),
                ('track_total', models.PositiveSmallIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(3000)], verbose_name='Total track count')),
                ('bpm', models.FloatField(null=True, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(300)], verbose_name='Beats per minute')),
                ('original_artist', models.CharField(blank=True, max_length=250, null=True, verbose_name='Original artist(s)/performer(s)')),
                ('key', models.CharField(blank=True, max_length=50, null=True, verbose_name='Song key')),
                ('composer', models.CharField(blank=True, max_length=250, null=True, verbose_name='Composer')),
                ('lyricist', models.CharField(blank=True, max_length=250, null=True, verbose_name='Lyricist/text writer')),
                ('comments', models.CharField(blank=True, max_length=500, null=True, verbose_name='Comments')),
                ('remixer', models.CharField(blank=True, max_length=250, null=True, verbose_name='Interpreted, remixed or otherwise modified by')),
                ('label', models.CharField(blank=True, max_length=250, null=True, verbose_name='Label/Publisher')),
                ('genre', models.CharField(blank=True, max_length=100, null=True, verbose_name='Genre/content type')),
                ('lyrics', models.TextField(blank=True, null=True, verbose_name='Lyrics')),
                ('artwork', models.ImageField(null=True, upload_to=applications.box.models.upload_to_root, verbose_name='Song cover')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='Creation time')),
                ('mtime', models.DateTimeField(auto_now=True, verbose_name='Modified time')),
            ],
        ),
    ]
